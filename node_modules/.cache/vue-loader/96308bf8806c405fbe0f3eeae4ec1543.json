{"remainingRequest":"H:\\CloudMusic\\Virus_Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\CloudMusic\\Virus_Vue\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\CloudMusic\\Virus_Vue\\src\\App.vue","mtime":1582558427182},{"path":"H:\\CloudMusic\\Virus_Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582516142926},{"path":"H:\\CloudMusic\\Virus_Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1582516169530},{"path":"H:\\CloudMusic\\Virus_Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582516142926},{"path":"H:\\CloudMusic\\Virus_Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1582516164810}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n!function(win, lib) {\n    var timer,\n        doc     = win.document,\n        docElem = doc.documentElement,\n\n        vpMeta   = doc.querySelector('meta[name=\"viewport\"]'),\n        flexMeta = doc.querySelector('meta[name=\"flexible\"]'),\n \n        dpr   = 0,\n        scale = 0,\n \n        flexible = lib.flexible || (lib.flexible = {});\n \n    // 设置了 viewport meta\n    if (vpMeta) {\n \n        console.warn(\"将根据已有的meta标签来设置缩放比例\");\n        var initial = vpMeta.getAttribute(\"content\").match(/initial\\-scale=([\\d\\.]+)/);\n \n        if (initial) {\n            scale = parseFloat(initial[1]); // 已设置的 initialScale\n            dpr = parseInt(1 / scale);      // 设备像素比 devicePixelRatio\n        }\n \n    }\n    // 设置了 flexible Meta\n    else if (flexMeta) {\n        var flexMetaContent = flexMeta.getAttribute(\"content\");\n        if (flexMetaContent) {\n \n            var initial = flexMetaContent.match(/initial\\-dpr=([\\d\\.]+)/),\n                maximum = flexMetaContent.match(/maximum\\-dpr=([\\d\\.]+)/);\n \n            if (initial) {\n                dpr = parseFloat(initial[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n \n            if (maximum) {\n                dpr = parseFloat(maximum[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n        }\n    }\n \n    // viewport 或 flexible\n    // meta 均未设置\n    if (!dpr && !scale) {\n        // QST\n        // 这里的 第一句有什么用 ?\n        // 和 Android 有毛关系 ?\n        var u = (win.navigator.appVersion.match(/android/gi), win.navigator.appVersion.match(/iphone/gi)),\n            _dpr = win.devicePixelRatio;\n \n        // 所以这里似乎是将所有 Android 设备都设置为 1 了\n        dpr = u ? ( (_dpr >= 3 && (!dpr || dpr >= 3))\n                        ? 3\n                        : (_dpr >= 2 && (!dpr || dpr >= 2))\n                            ? 2\n                            : 1\n                  )\n                : 1;\n \n        scale = 1 / dpr;\n    }\n \n    docElem.setAttribute(\"data-dpr\", dpr);\n \n    // 插入 viewport meta\n    if (!vpMeta) {\n        vpMeta = doc.createElement(\"meta\");\n         \n        vpMeta.setAttribute(\"name\", \"viewport\");\n        vpMeta.setAttribute(\"content\",\n            \"initial-scale=\" + scale + \", maximum-scale=\" + scale + \", minimum-scale=\" + scale + \", user-scalable=no\");\n \n        if (docElem.firstElementChild) {\n            docElem.firstElementChild.appendChild(vpMeta)\n        } else {\n            var div = doc.createElement(\"div\");\n            div.appendChild(vpMeta);\n            doc.write(div.innerHTML);\n        }\n    }\n \n    function setFontSize() {\n        var winWidth = docElem.getBoundingClientRect().width;\n \n        if (winWidth / dpr > 540) {\n            (winWidth = 540 * dpr);\n        }\n \n        // 根节点 fontSize 根据宽度决定\n        var baseSize = winWidth / 10;\n \n        docElem.style.fontSize = baseSize + \"px\";\n        flexible.rem = win.rem = baseSize;\n    }\n \n    // 调整窗口时重置\n    win.addEventListener(\"resize\", function() {\n        clearTimeout(timer);\n        timer = setTimeout(setFontSize, 300);\n    }, false);\n \n     \n    // 这一段是我自己加的\n    // orientationchange 时也需要重算下吧\n    win.addEventListener(\"orientationchange\", function() {\n        clearTimeout(timer);\n        timer = setTimeout(setFontSize, 300);\n    }, false);\n \n \n    // pageshow\n    // keyword: 倒退 缓存相关\n    win.addEventListener(\"pageshow\", function(e) {\n        if (e.persisted) {\n            clearTimeout(timer);\n            timer = setTimeout(setFontSize, 300);\n        }\n    }, false);\n \n    // 设置基准字体\n    if (\"complete\" === doc.readyState) {\n        doc.body.style.fontSize = 12 * dpr + \"px\";\n    } else {\n        doc.addEventListener(\"DOMContentLoaded\", function() {\n            doc.body.style.fontSize = 12 * dpr + \"px\";\n        }, false);\n    }\n  \n    setFontSize();\n \n    flexible.dpr = win.dpr = dpr;\n \n    flexible.refreshRem = setFontSize;\n \n    flexible.rem2px = function(d) {\n        var c = parseFloat(d) * this.rem;\n        if (\"string\" == typeof d && d.match(/rem$/)) {\n            c += \"px\";\n        }\n        return c;\n    };\n \n    flexible.px2rem = function(d) {\n        var c = parseFloat(d) / this.rem;\n         \n        if (\"string\" == typeof d && d.match(/px$/)) {\n            c += \"rem\";\n        }\n        return c;\n    }\n}(window, window.lib || (window.lib = {}));\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<style>\r\n\t*{\r\n\t\tmargin:0;\r\n\t\tpadding: 0;\r\n\t}\n</style>\r\n<script>\r\n\t!function(win, lib) {\r\n\t    var timer,\r\n\t        doc     = win.document,\r\n\t        docElem = doc.documentElement,\r\n\t\r\n\t        vpMeta   = doc.querySelector('meta[name=\"viewport\"]'),\r\n\t        flexMeta = doc.querySelector('meta[name=\"flexible\"]'),\r\n\t \r\n\t        dpr   = 0,\r\n\t        scale = 0,\r\n\t \r\n\t        flexible = lib.flexible || (lib.flexible = {});\r\n\t \r\n\t    // 设置了 viewport meta\r\n\t    if (vpMeta) {\r\n\t \r\n\t        console.warn(\"将根据已有的meta标签来设置缩放比例\");\r\n\t        var initial = vpMeta.getAttribute(\"content\").match(/initial\\-scale=([\\d\\.]+)/);\r\n\t \r\n\t        if (initial) {\r\n\t            scale = parseFloat(initial[1]); // 已设置的 initialScale\r\n\t            dpr = parseInt(1 / scale);      // 设备像素比 devicePixelRatio\r\n\t        }\r\n\t \r\n\t    }\r\n\t    // 设置了 flexible Meta\r\n\t    else if (flexMeta) {\r\n\t        var flexMetaContent = flexMeta.getAttribute(\"content\");\r\n\t        if (flexMetaContent) {\r\n\t \r\n\t            var initial = flexMetaContent.match(/initial\\-dpr=([\\d\\.]+)/),\r\n\t                maximum = flexMetaContent.match(/maximum\\-dpr=([\\d\\.]+)/);\r\n\t \r\n\t            if (initial) {\r\n\t                dpr = parseFloat(initial[1]);\r\n\t                scale = parseFloat((1 / dpr).toFixed(2));\r\n\t            }\r\n\t \r\n\t            if (maximum) {\r\n\t                dpr = parseFloat(maximum[1]);\r\n\t                scale = parseFloat((1 / dpr).toFixed(2));\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t \r\n\t    // viewport 或 flexible\r\n\t    // meta 均未设置\r\n\t    if (!dpr && !scale) {\r\n\t        // QST\r\n\t        // 这里的 第一句有什么用 ?\r\n\t        // 和 Android 有毛关系 ?\r\n\t        var u = (win.navigator.appVersion.match(/android/gi), win.navigator.appVersion.match(/iphone/gi)),\r\n\t            _dpr = win.devicePixelRatio;\r\n\t \r\n\t        // 所以这里似乎是将所有 Android 设备都设置为 1 了\r\n\t        dpr = u ? ( (_dpr >= 3 && (!dpr || dpr >= 3))\r\n\t                        ? 3\r\n\t                        : (_dpr >= 2 && (!dpr || dpr >= 2))\r\n\t                            ? 2\r\n\t                            : 1\r\n\t                  )\r\n\t                : 1;\r\n\t \r\n\t        scale = 1 / dpr;\r\n\t    }\r\n\t \r\n\t    docElem.setAttribute(\"data-dpr\", dpr);\r\n\t \r\n\t    // 插入 viewport meta\r\n\t    if (!vpMeta) {\r\n\t        vpMeta = doc.createElement(\"meta\");\r\n\t         \r\n\t        vpMeta.setAttribute(\"name\", \"viewport\");\r\n\t        vpMeta.setAttribute(\"content\",\r\n\t            \"initial-scale=\" + scale + \", maximum-scale=\" + scale + \", minimum-scale=\" + scale + \", user-scalable=no\");\r\n\t \r\n\t        if (docElem.firstElementChild) {\r\n\t            docElem.firstElementChild.appendChild(vpMeta)\r\n\t        } else {\r\n\t            var div = doc.createElement(\"div\");\r\n\t            div.appendChild(vpMeta);\r\n\t            doc.write(div.innerHTML);\r\n\t        }\r\n\t    }\r\n\t \r\n\t    function setFontSize() {\r\n\t        var winWidth = docElem.getBoundingClientRect().width;\r\n\t \r\n\t        if (winWidth / dpr > 540) {\r\n\t            (winWidth = 540 * dpr);\r\n\t        }\r\n\t \r\n\t        // 根节点 fontSize 根据宽度决定\r\n\t        var baseSize = winWidth / 10;\r\n\t \r\n\t        docElem.style.fontSize = baseSize + \"px\";\r\n\t        flexible.rem = win.rem = baseSize;\r\n\t    }\r\n\t \r\n\t    // 调整窗口时重置\r\n\t    win.addEventListener(\"resize\", function() {\r\n\t        clearTimeout(timer);\r\n\t        timer = setTimeout(setFontSize, 300);\r\n\t    }, false);\r\n\t \r\n\t     \r\n\t    // 这一段是我自己加的\r\n\t    // orientationchange 时也需要重算下吧\r\n\t    win.addEventListener(\"orientationchange\", function() {\r\n\t        clearTimeout(timer);\r\n\t        timer = setTimeout(setFontSize, 300);\r\n\t    }, false);\r\n\t \r\n\t \r\n\t    // pageshow\r\n\t    // keyword: 倒退 缓存相关\r\n\t    win.addEventListener(\"pageshow\", function(e) {\r\n\t        if (e.persisted) {\r\n\t            clearTimeout(timer);\r\n\t            timer = setTimeout(setFontSize, 300);\r\n\t        }\r\n\t    }, false);\r\n\t \r\n\t    // 设置基准字体\r\n\t    if (\"complete\" === doc.readyState) {\r\n\t        doc.body.style.fontSize = 12 * dpr + \"px\";\r\n\t    } else {\r\n\t        doc.addEventListener(\"DOMContentLoaded\", function() {\r\n\t            doc.body.style.fontSize = 12 * dpr + \"px\";\r\n\t        }, false);\r\n\t    }\r\n\t  \r\n\t    setFontSize();\r\n\t \r\n\t    flexible.dpr = win.dpr = dpr;\r\n\t \r\n\t    flexible.refreshRem = setFontSize;\r\n\t \r\n\t    flexible.rem2px = function(d) {\r\n\t        var c = parseFloat(d) * this.rem;\r\n\t        if (\"string\" == typeof d && d.match(/rem$/)) {\r\n\t            c += \"px\";\r\n\t        }\r\n\t        return c;\r\n\t    };\r\n\t \r\n\t    flexible.px2rem = function(d) {\r\n\t        var c = parseFloat(d) / this.rem;\r\n\t         \r\n\t        if (\"string\" == typeof d && d.match(/px$/)) {\r\n\t            c += \"rem\";\r\n\t        }\r\n\t        return c;\r\n\t    }\r\n\t}(window, window.lib || (window.lib = {}));\r\n</script>\n"]}]}